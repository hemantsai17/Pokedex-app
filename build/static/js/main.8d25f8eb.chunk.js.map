{"version":3,"sources":["pokecard.js","Pokedex.js","pokegame.js","App.js","reportWebVitals.js","index.js"],"names":["Pokecard","number","imgSrc","this","props","id","slice","className","name","src","alt","type","exp","Component","Pokedex","title","isWinner","pokemon","map","p","base_experience","Pokegame","hand1","hand2","length","randIdx","Math","floor","random","randPokemon","splice","push","exp1","reduce","exp2","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGMA,E,4JACF,WACI,IAHUC,EAGNC,EAAO,GAAD,OAJD,8DAIC,QAHAD,EAG2BE,KAAKC,MAAMC,KAHhB,IAAM,YAAKJ,GAASK,OAAO,GAAKL,EAGtD,QACV,OACI,sBAAKM,UAAU,WAAf,UACI,oBAAIA,UAAU,kBAAd,SAAiCJ,KAAKC,MAAMI,OAC7C,sBAAKD,UAAU,eAAf,cAA+B,qBAAKE,IAAKP,EAAQQ,IAAI,QACpD,sBAAKH,UAAU,gBAAf,oBAAuCJ,KAAKC,MAAMO,QAClD,sBAAKJ,UAAU,gBAAf,mBAAuCJ,KAAKC,MAAMQ,c,GAR3CC,aAaRb,ICZTc,G,kKAaF,WACI,IAAIC,EAMJ,OAJIA,EADAZ,KAAKC,MAAMY,SACH,oBAAIT,UAAU,iBAAd,0BAEA,oBAAIA,UAAU,gBAAd,yBAIR,sBAAKA,UAAU,UAAf,UACI,0CACA,oDAAuBJ,KAAKC,MAAMQ,IAAlC,OACCG,EAED,qBAAKR,UAAU,eAAf,SACMJ,KAAKC,MAAMa,QAAQC,KAAI,SAACC,GAAD,OACzB,cAAC,EAAD,CAAUd,GAAIc,EAAEd,GAAIG,KAAMW,EAAEX,KAAMG,KAAMQ,EAAER,KAAMC,IAAKO,EAAEC,8B,GA7BrDP,cAyCPC,IC3CTO,E,4JAaF,WAGI,IAFA,IAAIC,EAAQ,GACRC,EAAK,YAAOpB,KAAKC,MAAMa,SACpBK,EAAME,OAAQD,EAAMC,QAAQ,CAChC,IAAIC,EAAQC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMC,QACxCK,EAAcN,EAAMO,OAAOL,EAAS,GAAG,GAC3CH,EAAMS,KAAKF,GAEf,IAAIG,EAAOV,EAAMW,QAAO,SAACrB,EAAKK,GAAN,OAAkBL,EAAMK,EAAQG,kBAAiB,GACpEc,EAAOX,EAAMU,QAAO,SAACrB,EAAKK,GAAN,OAAkBL,EAAMK,EAAQG,kBAAiB,GAC1E,OACI,sBAAKb,UAAU,GAAf,UACI,cAAC,EAAD,CAASU,QAASK,EAAOV,IAAKoB,EAAMhB,SAAWgB,EAAKE,IACpD,cAAC,EAAD,CAASjB,QAASM,EAAOX,IAAKsB,EAAMlB,SAAUkB,EAAKF,W,GA1B5CnB,aAAjBQ,EACKc,aAAe,CAClBlB,QAAS,CACL,CAAEZ,GAAI,EAAGG,KAAM,aAAcG,KAAM,OAAQS,gBAAiB,IAC5D,CAAEf,GAAI,EAAGG,KAAM,WAAYG,KAAM,QAASS,gBAAiB,IAC3D,CAAEf,GAAI,GAAIG,KAAM,UAAWG,KAAM,MAAOS,gBAAiB,IACzD,CAAEf,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUS,gBAAiB,KAC/D,CAAEf,GAAI,GAAIG,KAAM,UAAWG,KAAM,WAAYS,gBAAiB,KAC9D,CAAEf,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUS,gBAAiB,IAC/D,CAAEf,GAAI,GAAIG,KAAM,SAAUG,KAAM,SAAUS,gBAAiB,KAC3D,CAAEf,GAAI,IAAKG,KAAM,QAASG,KAAM,SAAUS,gBAAiB,MAsBxDC,QC9BTe,E,4JACJ,WACE,OACE,qBAAK7B,UAAU,MAAf,SACC,cAAC,EAAD,U,GAJWM,aAUHuB,ICFAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8d25f8eb.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nconst POKE_API = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/'\r\nlet padToThree = (number) => (number <= 999 ? `00${number}`.slice(-3) : number);\r\nclass Pokecard extends Component{\r\n    render() {\r\n        let imgSrc=`${ POKE_API}${padToThree(this.props.id)}.png`\r\n        return (\r\n            <div className=\"Pokecard\">\r\n                <h1 className='pokdecard-title'>{this.props.name}</h1>\r\n               <div className='Pokecard-img'> <img src={imgSrc} alt='' /></div>\r\n                <div className='pokecard-data'>Type : {this.props.type}</div>\r\n                <div className='pokecard-data'>EXP : { this.props.exp}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Pokecard;\r\n//0098","import { Component } from \"react\";\r\nimport Pokecard from \"./pokecard\";\r\nimport './Pokedex.css';\r\n\r\nclass Pokedex extends Component{\r\n// //     static defaultProps = {\r\n// //         pokemon : [\r\n// //   {id: 4, name: 'Charmander', type: 'fire', base_experience: 62},\r\n// //   {id: 7, name: 'Squirtle', type: 'water', base_experience: 63},\r\n// //   {id: 11, name: 'Metapod', type: 'bug', base_experience: 72},\r\n// //   {id: 12, name: 'Butterfree', type: 'flying', base_experience: 178},\r\n// //   {id: 25, name: 'Pikachu', type: 'electric', base_experience: 112},\r\n// //   {id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95},\r\n// //   {id: 94, name: 'Gengar', type: 'poison', base_experience: 225},\r\n// //   {id: 133, name: 'Eevee', type: 'normal', base_experience: 65}\r\n// // ]\r\n//     }\r\n    render() {\r\n        let title;\r\n        if (this.props.isWinner) {\r\n            title = <h1 className='Pokedex-winner'>Winning Hand</h1>\r\n        } else {\r\n            title = <h1 className='Pokedex-loser'>Losing Hand</h1>\r\n        }\r\n        return (\r\n            \r\n            <div className=\"Pokedex\">\r\n                <h1>POKEDEX!</h1>\r\n                <h4>Total Experience: {this.props.exp} </h4>\r\n                {title}\r\n                \r\n                <div className=\"Pokedex-card\">\r\n                     {this.props.pokemon.map((p) => (\r\n                    <Pokecard id={p.id} name={p.name} type={p.type} exp={p.base_experience} />\r\n                ))\r\n         \r\n                }\r\n                </div>\r\n               \r\n                </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Pokedex","import React, { Component } from 'react';\r\nimport Pokedex from './Pokedex'\r\nclass Pokegame extends Component{\r\n    static defaultProps = {\r\n        pokemon: [\r\n            { id: 4, name: 'Charmander', type: 'fire', base_experience: 62 },\r\n            { id: 7, name: 'Squirtle', type: 'water', base_experience: 63 },\r\n            { id: 11, name: 'Metapod', type: 'bug', base_experience: 72 },\r\n            { id: 12, name: 'Butterfree', type: 'flying', base_experience: 178 },\r\n            { id: 25, name: 'Pikachu', type: 'electric', base_experience: 112 },\r\n            { id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95 },\r\n            { id: 94, name: 'Gengar', type: 'poison', base_experience: 225 },\r\n            { id: 133, name: 'Eevee', type: 'normal', base_experience: 65 }\r\n        ]\r\n    };\r\n    render() {\r\n        let hand1 = [];\r\n        let hand2 = [...this.props.pokemon];\r\n        while (hand1.length <hand2.length) {\r\n           let randIdx=Math.floor(Math.random() * hand2.length);\r\n            let randPokemon = hand2.splice(randIdx, 1)[0];\r\n            hand1.push(randPokemon);\r\n        }\r\n        let exp1 = hand1.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\r\n         let exp2 = hand2.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\r\n        return(\r\n            <div className=''>\r\n                <Pokedex pokemon={hand1} exp={exp1} isWinner={ exp1>exp2}/>\r\n                <Pokedex pokemon={hand2} exp={exp2} isWinner={exp2>exp1 }/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pokegame;","import { Component } from 'react';\nimport './App.css';\nimport './Pokecard.css';\nimport Pokegame from './pokegame';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" >\n       <Pokegame />\n        </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}